node {
   def mvnHome
   def artifactName
   def artifactVersion
   def _pom
   properties(
     [parameters([
       choice(choices: ['master', 'develop'], description: '', name: 'branch'),
       choice(choices: ['docker', 'tomcat', 'ansible'], description: '', name: 'deployment_method'),
       string(defaultValue: 'yatosh', description: '', name: 'artifact_name', trim: false)
    ])])
   stage('prin env') {
      sh label:"list env variables", script: "set"
   }
   stage('Preparation') {
      git url: 'https://github.com/zivkashtan/course.git'
      mvnHome = tool name: '3.6', type: 'maven'
      _pom = readMavenPom file: 'pom.xml'
      artifactName=artifact_name      
      artifactVersion="${_pom.version}-${BUILD_NUMBER}"
   }
   stage('Build') {
      if (branch=="develop"){
        sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
      } else {
        sh "'${mvnHome}/bin/mvn' clean package"
      }
      sh "mv web/target/*.war web/target/${artifactName}.war"
      writeFile file: 'Dockerfile',
       text: '''FROM tomcat:8.0.20-jre8
        COPY ./web/target/*.war /usr/local/tomcat/webapps/
        '''
      sh label: 'building docker image',
         script: "docker build -t ${artifactName}:${artifactVersion} ."
      
   }
   stage('Publish') {
      nexusPublisher nexusInstanceId: 'nexus',
       nexusRepositoryId: 'maven-releases',
       packages: [[$class: 'MavenPackage',
       mavenAssetList: [[
         classifier: 'war', 
         extension: 'war', 
         filePath: "web/target/${artifactName}.war"
       ]],
       mavenCoordinate: [
        artifactId: "${artifactName}",
        groupId: 'koki.moki',
        packaging: 'war',
        version: "${artifactVersion}"
      ]]]
      withCredentials([usernamePassword(credentialsId: 'nexus-auth', passwordVariable: 'pssd', usernameVariable: 'usrName')]) {
        sh """
          docker login -u ${usrName} -p ${pssd} localhost:8083
          docker tag ${artifactName}:${artifactVersion} localhost:8083/${artifactName}:${artifactVersion}
          docker push localhost:8083/${artifactName}:${artifactVersion}
        """
      }
   }
}